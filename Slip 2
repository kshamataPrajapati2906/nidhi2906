1
Slip 2--


1) Create simple application to perform following operations 
i. Finding factorial Value 
ii. Money Conversion 
iii. Cube of given number 
iv. Generate Fibonacci series
Code---

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace program3
{
    class Program
    {
        static void Main(string[] args)
        {
            int i, number, fact;
            Console.WriteLine("Enter the Number");
            number = int.Parse(Console.ReadLine());
            fact = number;
            for (i = number - 1; i >= 1; i--)
            {
                fact = fact * i;
            }
            Console.WriteLine("\nFactorial of Given Number is: " + fact);
            Console.ReadLine();

        }
    }
}


[ii] Money Conversion
Code
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace moneyconversion
{
    class Program
    {
        static void Main(string[] args)
        {
            int choice;
            Console.WriteLine("Enter your Choice :\n 1- Dollar to Rupee \n 2 - Euro to Rupee \n 3 - Malaysian Ringgit to Rupee ");
            choice = int.Parse(Console.ReadLine());
            switch (choice)
            {
                case 1:
                    Double dollar, rupee, val;
                    Console.WriteLine("Enter the Dollar Amount :");
                    dollar = Double.Parse(Console.ReadLine());
                    Console.WriteLine("Enter the Dollar Value :");
                    val = double.Parse(Console.ReadLine());
                    rupee = dollar * val;
                    Console.WriteLine("{0} Dollar Equals {1} Rupees", dollar, rupee);
                    break;
                case 2:
                    Double Euro, rupe, valu;
                    Console.WriteLine("Enter the Euro Amount :");
                    Euro = Double.Parse(Console.ReadLine());
                    Console.WriteLine("Enter the Euro Value :");
                    valu = double.Parse(Console.ReadLine());
                    rupe = Euro * valu;
                    Console.WriteLine("{0} Euro Equals {1} Rupees", Euro, rupe);
                    break;
                case 3:
                    Double ringit, rup, value;
                    Console.WriteLine("Enter the Ringgit Amount :");
                    ringit = Double.Parse(Console.ReadLine());
                    Console.WriteLine("Enter the Ringgit Value :");
                    value = double.Parse(Console.ReadLine());
                    rup = ringit * value;
                    Console.WriteLine("{0} Malaysian Ringgit Equals {1} Rupees",
                                      ringit, rup);
                    break;
            }
            Console.ReadLine();
        
    }
    }
}
Output
		
[i] Fibonacci Series
using System;
class Program
    {
        static void Main(string[] args)
        {
          int n1=0,n2=1,n3,i,number;    
         Console.Write("Enter the number of elements: ");    
         number = int.Parse(Console.ReadLine());  
         Console.Write(n1+" "+n2+" "); 
         for(i=2;i<number;++i) 
         {    
          n3=n1+n2;    
          Console.Write(n3+" ");    
          n1=n2;    
          n2=n3;    

        }
	}
    }

Output



Cube
using System;

class cube
{
    static int Main()
    {
        int     number  =   0;
        double  cube=   0;
        
        Console.Write("Enter the value of number: ");
        number = Convert.ToInt32(Console.ReadLine());
        cube=number*number*number;
        
        Console.WriteLine("Cube  is : " + cube);

        return 0;
    }
}


2) Demonstrate the use of Calendar control to perform following
operations. 
a) Display messages in a calendar control 
b) Display vacation in a calendar control 
c) Selected day in a calendar control using style 
d) Difference between two calendar dates


Display messages in a calendar control 


Code
Webform2.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm2.aspx.cs" Inherits="practical3.WebForm2" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
             <asp:Calendar ID="Calendar1" runat="server" BackColor="White" BorderColor="Black" BorderStyle="Solid" CellSpacing="1" Font-Names="Verdana" Font-Size="9pt" ForeColor="Black" Height="250px" NextPrevFormat="ShortMonth"  ondayrender="Calendar1_DayRender" onselectionchanged="Calendar1_SelectionChanged"  Width="330px"> <DayHeaderStyle Font-Bold="True" Font-Size="8pt" ForeColor="#333333"   Height="8pt" />  
 <DayStyle BackColor="#CCCCCC" />  
 <NextPrevStyle Font-Bold="True" Font-Size="8pt" ForeColor="White" />   <OtherMonthDayStyle ForeColor="#999999" />  
 <SelectedDayStyle BackColor="#333399" ForeColor="White" />  
 <TitleStyle BackColor="#333399" BorderStyle="Solid" Font-Bold="True"   Font-Size="12pt" ForeColor="White" Height="12pt" />  
 <TodayDayStyle BackColor="#999999" ForeColor="White" />  
 </asp:Calendar>  

        </div>
    </form>
</body>
</html>

Webform2.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace practical3
{
    public partial class WebForm2 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }
        protected void Calendar1_SelectionChanged(object sender, EventArgs e)
        {

        }

        protected void Calendar1_DayRender(object sender, DayRenderEventArgs e)
        {
            {
                if (e.Day.Date.Day == 10)
                    e.Cell.Controls.Add(new LiteralControl("</br>Holiday"));
            }
        }

    }
}
Output

Display vacation in a calendar control 
Code
Webform3.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm3.aspx.cs" Inherits="practical3.WebForm3" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
             <asp:Calendar ID="Calendar1" runat="server" BackColor="White"  
 BorderColor="Black" BorderStyle="Solid" CellSpacing="1" Font-Names="Verdana" Font-Size="9pt" ForeColor="Black" Height="250px" NextPrevFormat="ShortMonth"  ondayrender="Calendar1_DayRender" onselectionchanged="Calendar1_SelectionChanged"  Width="330px"> <DayHeaderStyle Font-Bold="True" Font-Size="8pt" ForeColor="#333333"   Height="8pt" />  
 <DayStyle BackColor="#CCCCCC" />  
 <NextPrevStyle Font-Bold="True" Font-Size="8pt" ForeColor="White" />   <OtherMonthDayStyle ForeColor="#999999" />  
 <SelectedDayStyle BackColor="#333399" ForeColor="White" />  
 <TitleStyle BackColor="#333399" BorderStyle="Solid" Font-Bold="True"   Font-Size="12pt" ForeColor="White" Height="12pt" />  
 <TodayDayStyle BackColor="#999999" ForeColor="White" />  
 </asp:Calendar>  

        </div>
    </form>
</body>
</html>

Webform3.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace practical3
{
    public partial class WebForm3 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }
        protected void Calendar1_SelectionChanged(object sender, EventArgs e)
        {

        }
        protected void Calendar1_DayRender(object sender, DayRenderEventArgs e)
        {
            {
                if ((e.Day.Date >= new DateTime(2021, 09, 10)) && (e.Day.Date <= new DateTime(2021, 09, 15)))
                {
                    e.Cell.BackColor = System.Drawing.Color.Blue;
                    e.Cell.BorderColor = System.Drawing.Color.Black;
                    e.Cell.BorderWidth = new Unit(3);

                }
            }

        }
    }
}
Output

Selected day in a calendar control using style 
Code
Webform4.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm4.aspx.cs" Inherits="practical3.WebForm4" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
             <asp:Calendar ID="Calendar1" runat="server" BackColor="White"  
 BorderColor="Black" BorderStyle="Solid" CellSpacing="1" Font-Names="Verdana" Font-Size="9pt" ForeColor="Black" Height="250px" NextPrevFormat="ShortMonth"  ondayrender="Calendar1_DayRender" onselectionchanged="Calendar1_SelectionChanged"  Width="330px"> <DayHeaderStyle Font-Bold="True" Font-Size="8pt" ForeColor="#333333"   Height="8pt" />  
 <DayStyle BackColor="#CCCCCC" />  
 <NextPrevStyle Font-Bold="True" Font-Size="8pt" ForeColor="White" />   <OtherMonthDayStyle ForeColor="#999999" />  
 <SelectedDayStyle BackColor="#333399" ForeColor="White" />  
 <TitleStyle BackColor="#333399" BorderStyle="Solid" Font-Bold="True"   Font-Size="12pt" ForeColor="White" Height="12pt" />  
 <TodayDayStyle BackColor="#999999" ForeColor="White" />  
 </asp:Calendar>  

        </div>
    </form>
</body>
</html>

Webform.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace practical3
{
    public partial class WebForm4 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }
        protected void Calendar1_SelectionChanged(object sender, EventArgs e)
        {

        }
        protected void Calendar1_DayRender(object sender, DayRenderEventArgs e)
        {
            {
                if ((e.Day.Date >= new DateTime(2021, 09, 10)) && (e.Day.Date <= new DateTime(2021, 09, 15)))
                {
                    e.Cell.BackColor = System.Drawing.Color.Red;
                    e.Cell.BorderColor = System.Drawing.Color.Black;
                    e.Cell.BorderWidth = new Unit(3);

                }
            }


        }
    }
}
Output

Difference between two calendar dates
Code
Webform5.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm5.aspx.cs" Inherits="practical3.WebForm5" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
              <asp:Calendar ID="Calendar1" runat="server"  
 onselectionchanged="Calendar1_SelectionChanged"></asp:Calendar>   <br />  
 <asp:Calendar ID="Calendar2" runat="server"></asp:Calendar>   <br />  
 <asp:Label ID="Label1" runat="server" Text="No Of Days is: "></asp:Label>   
            <asp:Button ID="Button1" runat="server" Text="Button" onclick="Button1_Click" />

        </div>
    </form>
</body>
</html>

Webform5.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace practical3
{
    public partial class WebForm5 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }
        protected void Calendar1_SelectionChanged(object sender, EventArgs e)
        {

        }

        protected void Button1_Click(object sender, EventArgs e)
        {
            TimeSpan t = Calendar1.SelectedDate - Calendar2.SelectedDate;
            Label1.Text = t.Days.ToString();

        }

    }
}
